using System;

namespace Rxns.DDD.BoundedContext
{
    public class DomainEvent : IDomainEvent
    {
        public string Id { get; set; }
        public DateTime Timestamp { get; set; }
        public string Tenant { get; set; }


        public DomainEvent()
        {
            Timestamp = DateTime.Now;
            Id = Guid.NewGuid().ToString();
        }


        public DomainEvent(string tenant) : this()
        {
            Tenant = tenant;
        }

        public bool HasTenantSpecified()
        {
            return !Tenant.IsNullOrWhitespace();
        }

        /// <summary>
        /// Specifies the tenant that this event was generated by
        /// </summary>
        /// <param name="tenant"></param>
        public void AssignTenant(string tenant)
        {
            if (tenant.IsNullOrWhitespace()) throw new Exception("Cannot assign this event a null tenant");
            if (!Tenant.IsNullOrWhitespace() && tenant != Tenant) throw new Exception("Tenant of '{0}' already assigned. Cannot change tenant of an event, only assign one".FormatWith(Tenant));

            Tenant = tenant;
        }
    }
}
